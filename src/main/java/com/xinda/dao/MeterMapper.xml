<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinda.dao.MeterMapper" >
  <resultMap id="BaseResultMap" type="com.xinda.entity.Meter" >
    <id column="id" property="meterId" jdbcType="INTEGER" />
    <result column="meter_number" property="meterNumber" jdbcType="VARCHAR" />
    <result column="meter_type" property="meterType" jdbcType="TINYINT" />
    <result column="meter_status" property="meterStatus" jdbcType="TINYINT" />
    <result column="meter_total_value" property="meterTotalValue" jdbcType="VARCHAR" />
    <result column="meter_max_balance" property="meterMaxBalance" jdbcType="DECIMAL" />
    <result column="meter_balance" property="meterBalance" jdbcType="DECIMAL" />
    <result column="meter_prompt_amount" property="meterPromptAmount" jdbcType="DECIMAL" />
    <result column="meter_stop_amount" property="meterStopAmount" jdbcType="DECIMAL" />
    <result column="meter_max_overdraft" property="meterMaxOverdraft" jdbcType="DECIMAL" />
    <result column="meter_current_overdraft" property="meterCurrentOverdraft" jdbcType="DECIMAL" />
    <result column="meter_total_consumption" property="meterTotalConsumption" jdbcType="DECIMAL" />
    <result column="electricity_price" property="electricityPrice" jdbcType="DECIMAL" />
    <association column="branch_number" property="meterBranch" resultMap="BranchMap"></association>
    <association column="user_account" property="meterUser" resultMap="UserMap"></association>
  </resultMap>
  <resultMap type="com.xinda.entity.User" id="UserMap">
  	<id column="uid" property="userId" jdbcType="INTEGER" />
    <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_role" property="userRole" jdbcType="INTEGER" />
    <result column="user_mobile" property="userMobile" jdbcType="VARCHAR" />
    <result column="user_balance" property="userBalance" jdbcType="DECIMAL" />
    <result column="user_idcard" property="userIdcard" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_address" property="userAddress" jdbcType="VARCHAR" />
    <result column="user_status" property="userStatus" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="BranchMap" type="com.xinda.entity.Branch" >
    <id column="bid" property="branchId" jdbcType="INTEGER" />
    <result column="branch_name" property="branchName" jdbcType="VARCHAR" />
    <result column="branch_number" property="branchNumber" jdbcType="VARCHAR" />
    <result column="branch_address" property="branchAddress" jdbcType="VARCHAR" />
    <result column="branch_host" property="branchHost" jdbcType="VARCHAR" />
    <result column="branch_port" property="branchPort" jdbcType="INTEGER" />
    <association column="branch_manager" property="branchManager" resultMap="UserMap"></association>
  </resultMap>
  <sql id="Base_Column_List" >
    id, meter_number, meter_type, meter_status, meter_total_value, meter_max_balance, 
    meter_balance, meter_prompt_amount, meter_stop_amount, meter_max_overdraft, meter_current_overdraft, 
    meter_total_consumption, electricity_price, user_account, branch_number
  </sql>
  <!-- <select id="selectUser" parameterType="java.lang.String" resultType="com.xinda.entity.User">
  	select * from user where user_account=#{userAccount}
  </select> -->
  <select id="selectAllMeters" resultMap="BaseResultMap">
  	select * from meter m 
  	left join user u
  	on m.user_account=u.user_account
	left join branch b
	on m.branch_number=b.branch_number
  	limit #{start}, #{size}
  </select>
  <select id="selectAllMetersCount" resultType="int">
  	select count(1) from meter m 
  	left join user u
  	on m.user_account=u.user_account
	left join branch b
	on m.branch_number=b.branch_number
  </select>
  <select id="selectMetersLikeExample1" resultMap="BaseResultMap" parameterType="com.xinda.entity.Meter">
  	select * from meter m 
  	left join user u
  	on m.user_account=u.user_account
  	<where>
  		<if test='meterStatus!=null'>
  			m.meter_status = #{meterStatus} or
  		</if>
  		<if test="meterType!=null">
  			m.meter_type = #{meterType} 
  		</if>
  	</where>
  	limit #{start}, #{size}
  </select>
  <select id="selectMetersLikeExample1Count" resultType="int" parameterType="com.xinda.entity.Meter">
  	select * from meter m 
  	left join user u
  	on m.user_account=u.user_account
  	<where>
  		<if test='meterStatus!=null'>
  			m.meter_status = #{meterStatus} or
  		</if>
  		<if test="meterType!=null">
  			m.meter_type = #{meterType} 
  		</if>
  	</where>
  </select>
  <select id="selectMetersLikeExample2" resultMap="BaseResultMap">
  	select * from meter m 
  	left join user u
  	on m.user_account=u.user_account
  	<where>
  		m.meter_number like concat("%",#{condi},"%") or
		m.user_account like concat("%",#{condi},"%") or
		m.branch_number like concat("%",#{condi},"%")
  	</where>
  	limit #{start}, #{size}
  </select>
  <select id="selectMetersForCondition" resultMap="BaseResultMap">
  	select * from meter m 
  	left join user u
  	on m.user_account=u.user_account
	left join branch b
	on m.branch_number=b.branch_number
	<where> 
	<if test="branchNum!=null">
	m.branch_number=#{branchNum} and
	</if>
	<if test="meterType!=null">
	m.meter_type=#{meterType} and
	</if>
	<if test="meterStatus!=null">
	m.meter_status=#{meterStatus} and
	</if>
	<if test="condition!=null">
	(u.user_name like concat("%",#{condition},"%")
	or u.user_mobile = #{condition}
	or u.user_idcard = #{condition}) and
	</if>
	1=1
	</where>
	limit #{start}, #{size}
  </select>
  <select id="selectCountForCondition" resultType="java.lang.Integer">
  	select count(1) from meter m 
  	left join user u
  	on m.user_account=u.user_account
	left join branch b
	on m.branch_number=b.branch_number
	<where> 
	<if test="branchNum!=null">
	m.branch_number=#{branchNum} and
	</if>
	<if test="meterType!=null">
	m.meter_type=#{meterType} and
	</if>
	<if test="meterStatus!=null">
	m.meter_status=#{meterStatus} and
	</if>
	<if test="condition!=null">
	(u.user_name like concat("%",#{condition},"%")
	or u.user_mobile = #{condition}
	or u.user_idcard = #{condition}) and
	</if>
	1=1
	</where>
  </select>
  <select id="selectMeterById" resultMap="BaseResultMap"  parameterType="java.lang.Integer">
  	select * from meter where id=#{meterId}
  </select>
  <update id="updateBalanceById">
  	update meter set meter_balance=#{meterBalance}
  	where id= #{meterId}
  </update>
  
  <update id="updateMeterById" parameterType="com.xinda.entity.Meter">
  	update meter 
  	<set>
  		<if test="meterStatus!=null">
  		meter_status=#{meterStatus},
  		</if>
  		<if test="meterMaxOverdraft!=null">
  		meter_max_overdraft=#{meterMaxOverdraft},
  		</if>
  		<if test="meterBalance!=null">
  		meter_balance=#{meterBalance},
  		</if>
  		<if test="meterCurrentOverdraft!=null">
  		meter_current_overdraft=#{meterCurrentOverdraft},
  		</if>
  		<if test="meterTotalValue!=null">
  		meter_total_value=#{meterTotalValue},
  		</if>
  		<if test="meterPromptAmount!=null">
  		meter_prompt_amount=#{meterPromptAmount},
  		</if>
  		<if test="meterStopAmount!=null">
  		meter_stop_amount=#{meterStopAmount},
  		</if>
  		<if test="meterTotalConsumption!=null">
  		meter_total_consumption=#{meterTotalConsumption}
  		</if>
  	</set>
  	<where>
  		id=#{meterId}
  	</where>
  </update>
</mapper>