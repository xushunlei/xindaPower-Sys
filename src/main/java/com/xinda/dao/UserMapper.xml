<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinda.dao.UserMapper" >
  <resultMap id="UserMap" type="com.xinda.entity.User" >
    <id column="uid" property="userId" jdbcType="INTEGER" />
    <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_role" property="userRole" jdbcType="INTEGER" />
    <result column="user_mobile" property="userMobile" jdbcType="VARCHAR" />
    <result column="user_balance" property="userBalance" jdbcType="DECIMAL" />
    <result column="user_idcard" property="userIdcard" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_address" property="userAddress" jdbcType="VARCHAR" />
    <result column="user_status" property="userStatus" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    uid, user_account, user_password, user_name, user_role, user_mobile, user_balance, 
    user_idcard, user_email, user_address, user_status
  </sql>
  <select id="selectByUser" resultMap="UserMap" parameterType="com.xinda.entity.User" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_account = #{userAccount} 
    and user_password=#{userPassword}
  </select>
  <select id="selectCountByAccount" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select 
    count(1) 
    from user 
    where user_account = #{userAccount}
  </select>
  <select id="selectCountByUser" resultType="java.lang.Integer" parameterType="com.xinda.entity.User" >
    select 
    count(1) 
    from user 
    where user_account = #{userAccount}
    and user_password=#{userPassword}
  </select>
  <insert id="insertSelective" parameterType="com.xinda.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        uid,
      </if>
      <if test="userAccount != null" >
        user_account,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userRole != null" >
        user_role,
      </if>
      <if test="userMobile != null" >
        user_mobile,
      </if>
      <if test="userBalance != null" >
        user_balance,
      </if>
      <if test="userIdcard != null" >
        user_idcard,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="userAddress != null" >
        user_address,
      </if>
      <if test="userStatus != null" >
        user_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userAccount != null" >
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null" >
        #{userRole,jdbcType=INTEGER},
      </if>
      <if test="userMobile != null" >
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userBalance != null" >
        #{userBalance,jdbcType=DECIMAL},
      </if>
      <if test="userIdcard != null" >
        #{userIdcard,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null" >
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        #{userStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="selectUsersByStatus" parameterType="java.lang.Byte" resultType="com.xinda.entity.User">
  	select <include refid="Base_Column_List" />
  	from user
    where user_status=#{userStatus}
  </select>
  <select id="selectUsers" resultMap="UserMap">
  	select <include refid="Base_Column_List" />
  	from user
  </select>
  <select id="selectTotalCount" resultType="java.lang.Integer">
  	select count(1)
  	from user
  </select>
  <select id="selectCountByStatus" resultType="java.lang.Integer" parameterType="java.lang.Byte">
  	select count(1)
  	from user
  	where user_status=#{status}
  </select>
  <update id="updateByUser" parameterType="com.xinda.entity.User">
  	update user
  	<set>
  		user_account=#{userAccount},
  		<if test="userPassword!=null">user_password=#{userPassword},</if>
  		<if test="userName!=null">user_name=#{userName},</if>
  		<if test="userRole!=null">user_role=#{userRole},</if>
  		<if test="userMobile!=null">user_mobile=#{userMobile},</if>
  		<if test="userBalance!=null">user_balance=#{userBalance},</if>
  		<if test="userIdcard!=null">user_idcard=#{userIdcard},</if>
  		<if test="userEmail!=null">user_email=#{userEmail},</if>
  		<if test="userAddress!=null">user_address=#{userAddress},</if>
  		<if test="userStatus!=null">user_status=#{userStatus},</if>
  	</set>
  	<where>
  		uid=#{userId}
  	</where>
  </update>
  <select id="selectUserById" resultMap="UserMap" parameterType="java.lang.Integer">
  	select <include refid="Base_Column_List"/>
  	from user
  	where uid=#{iserId}
  </select>
  <update id="updatePwdById">
  	update user 
  	set user_password=#{pwd}
  	where uid=#{id}
  </update>
  <update id="updateStatus">
  	update user
  	<set>
  		user_status=#{st,jdbcType=TINYINT}
  	</set>
  	where uid=#{id,jdbcType=INTEGER}
  </update>
</mapper>